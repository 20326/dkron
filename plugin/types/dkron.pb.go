// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dkron.proto

package types

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Job struct {
	Name                 string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Timezone             string                   `protobuf:"bytes,2,opt,name=timezone,proto3" json:"timezone,omitempty"`
	Schedule             string                   `protobuf:"bytes,3,opt,name=schedule,proto3" json:"schedule,omitempty"`
	Owner                string                   `protobuf:"bytes,7,opt,name=owner,proto3" json:"owner,omitempty"`
	OwnerEmail           string                   `protobuf:"bytes,8,opt,name=owner_email,json=ownerEmail,proto3" json:"owner_email,omitempty"`
	SuccessCount         int32                    `protobuf:"varint,9,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	ErrorCount           int32                    `protobuf:"varint,10,opt,name=error_count,json=errorCount,proto3" json:"error_count,omitempty"`
	Disabled             bool                     `protobuf:"varint,11,opt,name=disabled,proto3" json:"disabled,omitempty"`
	Tags                 map[string]string        `protobuf:"bytes,12,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Retries              uint32                   `protobuf:"varint,13,opt,name=retries,proto3" json:"retries,omitempty"`
	DependentJobs        []string                 `protobuf:"bytes,14,rep,name=dependent_jobs,json=dependentJobs,proto3" json:"dependent_jobs,omitempty"`
	ParentJob            string                   `protobuf:"bytes,15,opt,name=parent_job,json=parentJob,proto3" json:"parent_job,omitempty"`
	Concurrency          string                   `protobuf:"bytes,16,opt,name=concurrency,proto3" json:"concurrency,omitempty"`
	Executor             string                   `protobuf:"bytes,17,opt,name=executor,proto3" json:"executor,omitempty"`
	ExecutorConfig       map[string]string        `protobuf:"bytes,18,rep,name=executor_config,json=executorConfig,proto3" json:"executor_config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Status               string                   `protobuf:"bytes,19,opt,name=status,proto3" json:"status,omitempty"`
	Metadata             map[string]string        `protobuf:"bytes,20,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LastSuccess          *Job_NullableTime        `protobuf:"bytes,25,opt,name=last_success,json=lastSuccess,proto3" json:"last_success,omitempty"`
	LastError            *Job_NullableTime        `protobuf:"bytes,26,opt,name=last_error,json=lastError,proto3" json:"last_error,omitempty"`
	Next                 *timestamp.Timestamp     `protobuf:"bytes,23,opt,name=next,proto3" json:"next,omitempty"`
	Displayname          string                   `protobuf:"bytes,24,opt,name=displayname,proto3" json:"displayname,omitempty"`
	Processors           map[string]*PluginConfig `protobuf:"bytes,27,rep,name=processors,proto3" json:"processors,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{0}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Job) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *Job) GetSchedule() string {
	if m != nil {
		return m.Schedule
	}
	return ""
}

func (m *Job) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Job) GetOwnerEmail() string {
	if m != nil {
		return m.OwnerEmail
	}
	return ""
}

func (m *Job) GetSuccessCount() int32 {
	if m != nil {
		return m.SuccessCount
	}
	return 0
}

func (m *Job) GetErrorCount() int32 {
	if m != nil {
		return m.ErrorCount
	}
	return 0
}

func (m *Job) GetDisabled() bool {
	if m != nil {
		return m.Disabled
	}
	return false
}

func (m *Job) GetTags() map[string]string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Job) GetRetries() uint32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *Job) GetDependentJobs() []string {
	if m != nil {
		return m.DependentJobs
	}
	return nil
}

func (m *Job) GetParentJob() string {
	if m != nil {
		return m.ParentJob
	}
	return ""
}

func (m *Job) GetConcurrency() string {
	if m != nil {
		return m.Concurrency
	}
	return ""
}

func (m *Job) GetExecutor() string {
	if m != nil {
		return m.Executor
	}
	return ""
}

func (m *Job) GetExecutorConfig() map[string]string {
	if m != nil {
		return m.ExecutorConfig
	}
	return nil
}

func (m *Job) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Job) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Job) GetLastSuccess() *Job_NullableTime {
	if m != nil {
		return m.LastSuccess
	}
	return nil
}

func (m *Job) GetLastError() *Job_NullableTime {
	if m != nil {
		return m.LastError
	}
	return nil
}

func (m *Job) GetNext() *timestamp.Timestamp {
	if m != nil {
		return m.Next
	}
	return nil
}

func (m *Job) GetDisplayname() string {
	if m != nil {
		return m.Displayname
	}
	return ""
}

func (m *Job) GetProcessors() map[string]*PluginConfig {
	if m != nil {
		return m.Processors
	}
	return nil
}

type Job_NullableTime struct {
	HasValue             bool                 `protobuf:"varint,1,opt,name=has_value,json=hasValue,proto3" json:"has_value,omitempty"`
	Time                 *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Job_NullableTime) Reset()         { *m = Job_NullableTime{} }
func (m *Job_NullableTime) String() string { return proto.CompactTextString(m) }
func (*Job_NullableTime) ProtoMessage()    {}
func (*Job_NullableTime) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{0, 3}
}

func (m *Job_NullableTime) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job_NullableTime.Unmarshal(m, b)
}
func (m *Job_NullableTime) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job_NullableTime.Marshal(b, m, deterministic)
}
func (m *Job_NullableTime) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job_NullableTime.Merge(m, src)
}
func (m *Job_NullableTime) XXX_Size() int {
	return xxx_messageInfo_Job_NullableTime.Size(m)
}
func (m *Job_NullableTime) XXX_DiscardUnknown() {
	xxx_messageInfo_Job_NullableTime.DiscardUnknown(m)
}

var xxx_messageInfo_Job_NullableTime proto.InternalMessageInfo

func (m *Job_NullableTime) GetHasValue() bool {
	if m != nil {
		return m.HasValue
	}
	return false
}

func (m *Job_NullableTime) GetTime() *timestamp.Timestamp {
	if m != nil {
		return m.Time
	}
	return nil
}

type PluginConfig struct {
	Config               map[string]string `protobuf:"bytes,1,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PluginConfig) Reset()         { *m = PluginConfig{} }
func (m *PluginConfig) String() string { return proto.CompactTextString(m) }
func (*PluginConfig) ProtoMessage()    {}
func (*PluginConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{1}
}

func (m *PluginConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PluginConfig.Unmarshal(m, b)
}
func (m *PluginConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PluginConfig.Marshal(b, m, deterministic)
}
func (m *PluginConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PluginConfig.Merge(m, src)
}
func (m *PluginConfig) XXX_Size() int {
	return xxx_messageInfo_PluginConfig.Size(m)
}
func (m *PluginConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_PluginConfig.DiscardUnknown(m)
}

var xxx_messageInfo_PluginConfig proto.InternalMessageInfo

func (m *PluginConfig) GetConfig() map[string]string {
	if m != nil {
		return m.Config
	}
	return nil
}

type SetJobRequest struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetJobRequest) Reset()         { *m = SetJobRequest{} }
func (m *SetJobRequest) String() string { return proto.CompactTextString(m) }
func (*SetJobRequest) ProtoMessage()    {}
func (*SetJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{2}
}

func (m *SetJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetJobRequest.Unmarshal(m, b)
}
func (m *SetJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetJobRequest.Marshal(b, m, deterministic)
}
func (m *SetJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetJobRequest.Merge(m, src)
}
func (m *SetJobRequest) XXX_Size() int {
	return xxx_messageInfo_SetJobRequest.Size(m)
}
func (m *SetJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SetJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SetJobRequest proto.InternalMessageInfo

func (m *SetJobRequest) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type SetJobResponse struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SetJobResponse) Reset()         { *m = SetJobResponse{} }
func (m *SetJobResponse) String() string { return proto.CompactTextString(m) }
func (*SetJobResponse) ProtoMessage()    {}
func (*SetJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{3}
}

func (m *SetJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SetJobResponse.Unmarshal(m, b)
}
func (m *SetJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SetJobResponse.Marshal(b, m, deterministic)
}
func (m *SetJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SetJobResponse.Merge(m, src)
}
func (m *SetJobResponse) XXX_Size() int {
	return xxx_messageInfo_SetJobResponse.Size(m)
}
func (m *SetJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SetJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SetJobResponse proto.InternalMessageInfo

func (m *SetJobResponse) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type DeleteJobRequest struct {
	JobName              string   `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteJobRequest) Reset()         { *m = DeleteJobRequest{} }
func (m *DeleteJobRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteJobRequest) ProtoMessage()    {}
func (*DeleteJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{4}
}

func (m *DeleteJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteJobRequest.Unmarshal(m, b)
}
func (m *DeleteJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteJobRequest.Marshal(b, m, deterministic)
}
func (m *DeleteJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteJobRequest.Merge(m, src)
}
func (m *DeleteJobRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteJobRequest.Size(m)
}
func (m *DeleteJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteJobRequest proto.InternalMessageInfo

func (m *DeleteJobRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

type DeleteJobResponse struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteJobResponse) Reset()         { *m = DeleteJobResponse{} }
func (m *DeleteJobResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteJobResponse) ProtoMessage()    {}
func (*DeleteJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{5}
}

func (m *DeleteJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteJobResponse.Unmarshal(m, b)
}
func (m *DeleteJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteJobResponse.Marshal(b, m, deterministic)
}
func (m *DeleteJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteJobResponse.Merge(m, src)
}
func (m *DeleteJobResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteJobResponse.Size(m)
}
func (m *DeleteJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteJobResponse proto.InternalMessageInfo

func (m *DeleteJobResponse) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type GetJobRequest struct {
	JobName              string   `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobRequest) Reset()         { *m = GetJobRequest{} }
func (m *GetJobRequest) String() string { return proto.CompactTextString(m) }
func (*GetJobRequest) ProtoMessage()    {}
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{6}
}

func (m *GetJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobRequest.Unmarshal(m, b)
}
func (m *GetJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobRequest.Marshal(b, m, deterministic)
}
func (m *GetJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobRequest.Merge(m, src)
}
func (m *GetJobRequest) XXX_Size() int {
	return xxx_messageInfo_GetJobRequest.Size(m)
}
func (m *GetJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobRequest proto.InternalMessageInfo

func (m *GetJobRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

type GetJobResponse struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetJobResponse) Reset()         { *m = GetJobResponse{} }
func (m *GetJobResponse) String() string { return proto.CompactTextString(m) }
func (*GetJobResponse) ProtoMessage()    {}
func (*GetJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{7}
}

func (m *GetJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetJobResponse.Unmarshal(m, b)
}
func (m *GetJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetJobResponse.Marshal(b, m, deterministic)
}
func (m *GetJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetJobResponse.Merge(m, src)
}
func (m *GetJobResponse) XXX_Size() int {
	return xxx_messageInfo_GetJobResponse.Size(m)
}
func (m *GetJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetJobResponse proto.InternalMessageInfo

func (m *GetJobResponse) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type Execution struct {
	JobName              string               `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	Success              bool                 `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	Output               []byte               `protobuf:"bytes,3,opt,name=output,proto3" json:"output,omitempty"`
	NodeName             string               `protobuf:"bytes,4,opt,name=node_name,json=nodeName,proto3" json:"node_name,omitempty"`
	Group                int64                `protobuf:"varint,5,opt,name=group,proto3" json:"group,omitempty"`
	Attempt              uint32               `protobuf:"varint,6,opt,name=attempt,proto3" json:"attempt,omitempty"`
	StartedAt            *timestamp.Timestamp `protobuf:"bytes,7,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	FinishedAt           *timestamp.Timestamp `protobuf:"bytes,8,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Execution) Reset()         { *m = Execution{} }
func (m *Execution) String() string { return proto.CompactTextString(m) }
func (*Execution) ProtoMessage()    {}
func (*Execution) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{8}
}

func (m *Execution) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Execution.Unmarshal(m, b)
}
func (m *Execution) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Execution.Marshal(b, m, deterministic)
}
func (m *Execution) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Execution.Merge(m, src)
}
func (m *Execution) XXX_Size() int {
	return xxx_messageInfo_Execution.Size(m)
}
func (m *Execution) XXX_DiscardUnknown() {
	xxx_messageInfo_Execution.DiscardUnknown(m)
}

var xxx_messageInfo_Execution proto.InternalMessageInfo

func (m *Execution) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

func (m *Execution) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Execution) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

func (m *Execution) GetNodeName() string {
	if m != nil {
		return m.NodeName
	}
	return ""
}

func (m *Execution) GetGroup() int64 {
	if m != nil {
		return m.Group
	}
	return 0
}

func (m *Execution) GetAttempt() uint32 {
	if m != nil {
		return m.Attempt
	}
	return 0
}

func (m *Execution) GetStartedAt() *timestamp.Timestamp {
	if m != nil {
		return m.StartedAt
	}
	return nil
}

func (m *Execution) GetFinishedAt() *timestamp.Timestamp {
	if m != nil {
		return m.FinishedAt
	}
	return nil
}

type ExecutionDoneRequest struct {
	Execution            *Execution `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ExecutionDoneRequest) Reset()         { *m = ExecutionDoneRequest{} }
func (m *ExecutionDoneRequest) String() string { return proto.CompactTextString(m) }
func (*ExecutionDoneRequest) ProtoMessage()    {}
func (*ExecutionDoneRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{9}
}

func (m *ExecutionDoneRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionDoneRequest.Unmarshal(m, b)
}
func (m *ExecutionDoneRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionDoneRequest.Marshal(b, m, deterministic)
}
func (m *ExecutionDoneRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionDoneRequest.Merge(m, src)
}
func (m *ExecutionDoneRequest) XXX_Size() int {
	return xxx_messageInfo_ExecutionDoneRequest.Size(m)
}
func (m *ExecutionDoneRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionDoneRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionDoneRequest proto.InternalMessageInfo

func (m *ExecutionDoneRequest) GetExecution() *Execution {
	if m != nil {
		return m.Execution
	}
	return nil
}

type ExecutionDoneResponse struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExecutionDoneResponse) Reset()         { *m = ExecutionDoneResponse{} }
func (m *ExecutionDoneResponse) String() string { return proto.CompactTextString(m) }
func (*ExecutionDoneResponse) ProtoMessage()    {}
func (*ExecutionDoneResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{10}
}

func (m *ExecutionDoneResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExecutionDoneResponse.Unmarshal(m, b)
}
func (m *ExecutionDoneResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExecutionDoneResponse.Marshal(b, m, deterministic)
}
func (m *ExecutionDoneResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExecutionDoneResponse.Merge(m, src)
}
func (m *ExecutionDoneResponse) XXX_Size() int {
	return xxx_messageInfo_ExecutionDoneResponse.Size(m)
}
func (m *ExecutionDoneResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ExecutionDoneResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ExecutionDoneResponse proto.InternalMessageInfo

func (m *ExecutionDoneResponse) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *ExecutionDoneResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type RunJobRequest struct {
	JobName              string   `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunJobRequest) Reset()         { *m = RunJobRequest{} }
func (m *RunJobRequest) String() string { return proto.CompactTextString(m) }
func (*RunJobRequest) ProtoMessage()    {}
func (*RunJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{11}
}

func (m *RunJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunJobRequest.Unmarshal(m, b)
}
func (m *RunJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunJobRequest.Marshal(b, m, deterministic)
}
func (m *RunJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunJobRequest.Merge(m, src)
}
func (m *RunJobRequest) XXX_Size() int {
	return xxx_messageInfo_RunJobRequest.Size(m)
}
func (m *RunJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RunJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RunJobRequest proto.InternalMessageInfo

func (m *RunJobRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

type RunJobResponse struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RunJobResponse) Reset()         { *m = RunJobResponse{} }
func (m *RunJobResponse) String() string { return proto.CompactTextString(m) }
func (*RunJobResponse) ProtoMessage()    {}
func (*RunJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{12}
}

func (m *RunJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RunJobResponse.Unmarshal(m, b)
}
func (m *RunJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RunJobResponse.Marshal(b, m, deterministic)
}
func (m *RunJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RunJobResponse.Merge(m, src)
}
func (m *RunJobResponse) XXX_Size() int {
	return xxx_messageInfo_RunJobResponse.Size(m)
}
func (m *RunJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RunJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RunJobResponse proto.InternalMessageInfo

func (m *RunJobResponse) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type ToggleJobRequest struct {
	JobName              string   `protobuf:"bytes,1,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToggleJobRequest) Reset()         { *m = ToggleJobRequest{} }
func (m *ToggleJobRequest) String() string { return proto.CompactTextString(m) }
func (*ToggleJobRequest) ProtoMessage()    {}
func (*ToggleJobRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{13}
}

func (m *ToggleJobRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToggleJobRequest.Unmarshal(m, b)
}
func (m *ToggleJobRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToggleJobRequest.Marshal(b, m, deterministic)
}
func (m *ToggleJobRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToggleJobRequest.Merge(m, src)
}
func (m *ToggleJobRequest) XXX_Size() int {
	return xxx_messageInfo_ToggleJobRequest.Size(m)
}
func (m *ToggleJobRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ToggleJobRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ToggleJobRequest proto.InternalMessageInfo

func (m *ToggleJobRequest) GetJobName() string {
	if m != nil {
		return m.JobName
	}
	return ""
}

type ToggleJobResponse struct {
	Job                  *Job     `protobuf:"bytes,1,opt,name=job,proto3" json:"job,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ToggleJobResponse) Reset()         { *m = ToggleJobResponse{} }
func (m *ToggleJobResponse) String() string { return proto.CompactTextString(m) }
func (*ToggleJobResponse) ProtoMessage()    {}
func (*ToggleJobResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{14}
}

func (m *ToggleJobResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ToggleJobResponse.Unmarshal(m, b)
}
func (m *ToggleJobResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ToggleJobResponse.Marshal(b, m, deterministic)
}
func (m *ToggleJobResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ToggleJobResponse.Merge(m, src)
}
func (m *ToggleJobResponse) XXX_Size() int {
	return xxx_messageInfo_ToggleJobResponse.Size(m)
}
func (m *ToggleJobResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ToggleJobResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ToggleJobResponse proto.InternalMessageInfo

func (m *ToggleJobResponse) GetJob() *Job {
	if m != nil {
		return m.Job
	}
	return nil
}

type RaftServer struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Node                 string   `protobuf:"bytes,2,opt,name=node,proto3" json:"node,omitempty"`
	Address              string   `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Leader               bool     `protobuf:"varint,4,opt,name=leader,proto3" json:"leader,omitempty"`
	Voter                bool     `protobuf:"varint,5,opt,name=voter,proto3" json:"voter,omitempty"`
	RaftProtocol         string   `protobuf:"bytes,6,opt,name=raft_protocol,json=raftProtocol,proto3" json:"raft_protocol,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaftServer) Reset()         { *m = RaftServer{} }
func (m *RaftServer) String() string { return proto.CompactTextString(m) }
func (*RaftServer) ProtoMessage()    {}
func (*RaftServer) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{15}
}

func (m *RaftServer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftServer.Unmarshal(m, b)
}
func (m *RaftServer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftServer.Marshal(b, m, deterministic)
}
func (m *RaftServer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftServer.Merge(m, src)
}
func (m *RaftServer) XXX_Size() int {
	return xxx_messageInfo_RaftServer.Size(m)
}
func (m *RaftServer) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftServer.DiscardUnknown(m)
}

var xxx_messageInfo_RaftServer proto.InternalMessageInfo

func (m *RaftServer) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RaftServer) GetNode() string {
	if m != nil {
		return m.Node
	}
	return ""
}

func (m *RaftServer) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *RaftServer) GetLeader() bool {
	if m != nil {
		return m.Leader
	}
	return false
}

func (m *RaftServer) GetVoter() bool {
	if m != nil {
		return m.Voter
	}
	return false
}

func (m *RaftServer) GetRaftProtocol() string {
	if m != nil {
		return m.RaftProtocol
	}
	return ""
}

type RaftGetConfigurationResponse struct {
	Servers              []*RaftServer `protobuf:"bytes,1,rep,name=servers,proto3" json:"servers,omitempty"`
	Index                uint64        `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RaftGetConfigurationResponse) Reset()         { *m = RaftGetConfigurationResponse{} }
func (m *RaftGetConfigurationResponse) String() string { return proto.CompactTextString(m) }
func (*RaftGetConfigurationResponse) ProtoMessage()    {}
func (*RaftGetConfigurationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{16}
}

func (m *RaftGetConfigurationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftGetConfigurationResponse.Unmarshal(m, b)
}
func (m *RaftGetConfigurationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftGetConfigurationResponse.Marshal(b, m, deterministic)
}
func (m *RaftGetConfigurationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftGetConfigurationResponse.Merge(m, src)
}
func (m *RaftGetConfigurationResponse) XXX_Size() int {
	return xxx_messageInfo_RaftGetConfigurationResponse.Size(m)
}
func (m *RaftGetConfigurationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftGetConfigurationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RaftGetConfigurationResponse proto.InternalMessageInfo

func (m *RaftGetConfigurationResponse) GetServers() []*RaftServer {
	if m != nil {
		return m.Servers
	}
	return nil
}

func (m *RaftGetConfigurationResponse) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

type RaftRemovePeerByIDRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RaftRemovePeerByIDRequest) Reset()         { *m = RaftRemovePeerByIDRequest{} }
func (m *RaftRemovePeerByIDRequest) String() string { return proto.CompactTextString(m) }
func (*RaftRemovePeerByIDRequest) ProtoMessage()    {}
func (*RaftRemovePeerByIDRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{17}
}

func (m *RaftRemovePeerByIDRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RaftRemovePeerByIDRequest.Unmarshal(m, b)
}
func (m *RaftRemovePeerByIDRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RaftRemovePeerByIDRequest.Marshal(b, m, deterministic)
}
func (m *RaftRemovePeerByIDRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RaftRemovePeerByIDRequest.Merge(m, src)
}
func (m *RaftRemovePeerByIDRequest) XXX_Size() int {
	return xxx_messageInfo_RaftRemovePeerByIDRequest.Size(m)
}
func (m *RaftRemovePeerByIDRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RaftRemovePeerByIDRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RaftRemovePeerByIDRequest proto.InternalMessageInfo

func (m *RaftRemovePeerByIDRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type AgentRunStream struct {
	Execution            *Execution `protobuf:"bytes,1,opt,name=execution,proto3" json:"execution,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *AgentRunStream) Reset()         { *m = AgentRunStream{} }
func (m *AgentRunStream) String() string { return proto.CompactTextString(m) }
func (*AgentRunStream) ProtoMessage()    {}
func (*AgentRunStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{18}
}

func (m *AgentRunStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentRunStream.Unmarshal(m, b)
}
func (m *AgentRunStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentRunStream.Marshal(b, m, deterministic)
}
func (m *AgentRunStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentRunStream.Merge(m, src)
}
func (m *AgentRunStream) XXX_Size() int {
	return xxx_messageInfo_AgentRunStream.Size(m)
}
func (m *AgentRunStream) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentRunStream.DiscardUnknown(m)
}

var xxx_messageInfo_AgentRunStream proto.InternalMessageInfo

func (m *AgentRunStream) GetExecution() *Execution {
	if m != nil {
		return m.Execution
	}
	return nil
}

type AgentRunResponse struct {
	From                 string   `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AgentRunResponse) Reset()         { *m = AgentRunResponse{} }
func (m *AgentRunResponse) String() string { return proto.CompactTextString(m) }
func (*AgentRunResponse) ProtoMessage()    {}
func (*AgentRunResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{19}
}

func (m *AgentRunResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AgentRunResponse.Unmarshal(m, b)
}
func (m *AgentRunResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AgentRunResponse.Marshal(b, m, deterministic)
}
func (m *AgentRunResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AgentRunResponse.Merge(m, src)
}
func (m *AgentRunResponse) XXX_Size() int {
	return xxx_messageInfo_AgentRunResponse.Size(m)
}
func (m *AgentRunResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AgentRunResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AgentRunResponse proto.InternalMessageInfo

func (m *AgentRunResponse) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *AgentRunResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type GetActiveExecutionsResponse struct {
	Executions           []*Execution `protobuf:"bytes,1,rep,name=executions,proto3" json:"executions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetActiveExecutionsResponse) Reset()         { *m = GetActiveExecutionsResponse{} }
func (m *GetActiveExecutionsResponse) String() string { return proto.CompactTextString(m) }
func (*GetActiveExecutionsResponse) ProtoMessage()    {}
func (*GetActiveExecutionsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_1f0292872e9433f8, []int{20}
}

func (m *GetActiveExecutionsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetActiveExecutionsResponse.Unmarshal(m, b)
}
func (m *GetActiveExecutionsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetActiveExecutionsResponse.Marshal(b, m, deterministic)
}
func (m *GetActiveExecutionsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetActiveExecutionsResponse.Merge(m, src)
}
func (m *GetActiveExecutionsResponse) XXX_Size() int {
	return xxx_messageInfo_GetActiveExecutionsResponse.Size(m)
}
func (m *GetActiveExecutionsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetActiveExecutionsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetActiveExecutionsResponse proto.InternalMessageInfo

func (m *GetActiveExecutionsResponse) GetExecutions() []*Execution {
	if m != nil {
		return m.Executions
	}
	return nil
}

func init() {
	proto.RegisterType((*Job)(nil), "types.Job")
	proto.RegisterMapType((map[string]string)(nil), "types.Job.ExecutorConfigEntry")
	proto.RegisterMapType((map[string]string)(nil), "types.Job.MetadataEntry")
	proto.RegisterMapType((map[string]*PluginConfig)(nil), "types.Job.ProcessorsEntry")
	proto.RegisterMapType((map[string]string)(nil), "types.Job.TagsEntry")
	proto.RegisterType((*Job_NullableTime)(nil), "types.Job.NullableTime")
	proto.RegisterType((*PluginConfig)(nil), "types.PluginConfig")
	proto.RegisterMapType((map[string]string)(nil), "types.PluginConfig.ConfigEntry")
	proto.RegisterType((*SetJobRequest)(nil), "types.SetJobRequest")
	proto.RegisterType((*SetJobResponse)(nil), "types.SetJobResponse")
	proto.RegisterType((*DeleteJobRequest)(nil), "types.DeleteJobRequest")
	proto.RegisterType((*DeleteJobResponse)(nil), "types.DeleteJobResponse")
	proto.RegisterType((*GetJobRequest)(nil), "types.GetJobRequest")
	proto.RegisterType((*GetJobResponse)(nil), "types.GetJobResponse")
	proto.RegisterType((*Execution)(nil), "types.Execution")
	proto.RegisterType((*ExecutionDoneRequest)(nil), "types.ExecutionDoneRequest")
	proto.RegisterType((*ExecutionDoneResponse)(nil), "types.ExecutionDoneResponse")
	proto.RegisterType((*RunJobRequest)(nil), "types.RunJobRequest")
	proto.RegisterType((*RunJobResponse)(nil), "types.RunJobResponse")
	proto.RegisterType((*ToggleJobRequest)(nil), "types.ToggleJobRequest")
	proto.RegisterType((*ToggleJobResponse)(nil), "types.ToggleJobResponse")
	proto.RegisterType((*RaftServer)(nil), "types.RaftServer")
	proto.RegisterType((*RaftGetConfigurationResponse)(nil), "types.RaftGetConfigurationResponse")
	proto.RegisterType((*RaftRemovePeerByIDRequest)(nil), "types.RaftRemovePeerByIDRequest")
	proto.RegisterType((*AgentRunStream)(nil), "types.AgentRunStream")
	proto.RegisterType((*AgentRunResponse)(nil), "types.AgentRunResponse")
	proto.RegisterType((*GetActiveExecutionsResponse)(nil), "types.GetActiveExecutionsResponse")
}

func init() { proto.RegisterFile("dkron.proto", fileDescriptor_1f0292872e9433f8) }

var fileDescriptor_1f0292872e9433f8 = []byte{
	// 1297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0xdd, 0x72, 0xdb, 0x36,
	0x13, 0x1d, 0xda, 0x96, 0x2d, 0xae, 0x7e, 0xe2, 0xc0, 0x4e, 0x82, 0xd0, 0xf9, 0xbe, 0x68, 0x94,
	0xe9, 0x8c, 0xda, 0x4c, 0x94, 0xd6, 0x6d, 0x9a, 0x26, 0xe9, 0x64, 0xe2, 0xc6, 0xae, 0xa7, 0x9e,
	0x36, 0x75, 0x29, 0x4f, 0x6f, 0x7a, 0xa1, 0x81, 0xc4, 0xb5, 0xcc, 0x84, 0x22, 0x54, 0x00, 0x74,
	0xa3, 0x5e, 0xf6, 0x3d, 0xfa, 0x18, 0x7d, 0xa6, 0xbe, 0x46, 0x07, 0x00, 0x41, 0x53, 0xb2, 0xec,
	0xd8, 0xb9, 0xe3, 0x2e, 0x0e, 0x16, 0xbb, 0x8b, 0x73, 0x96, 0x80, 0x5a, 0xf4, 0x4e, 0xf0, 0xb4,
	0x3b, 0x11, 0x5c, 0x71, 0x52, 0x51, 0xd3, 0x09, 0xca, 0xe0, 0xfe, 0x88, 0xf3, 0x51, 0x82, 0x8f,
	0x8d, 0x73, 0x90, 0x1d, 0x3f, 0x56, 0xf1, 0x18, 0xa5, 0x62, 0xe3, 0x89, 0xc5, 0x05, 0x5b, 0xf3,
	0x00, 0x1c, 0x4f, 0xd4, 0xd4, 0x2e, 0xb6, 0xff, 0xf1, 0x61, 0xf9, 0x80, 0x0f, 0x08, 0x81, 0x95,
	0x94, 0x8d, 0x91, 0x7a, 0x2d, 0xaf, 0xe3, 0x87, 0xe6, 0x9b, 0x04, 0x50, 0xd5, 0xb1, 0xfe, 0xe4,
	0x29, 0xd2, 0x25, 0xe3, 0x2f, 0x6c, 0xbd, 0x26, 0x87, 0x27, 0x18, 0x65, 0x09, 0xd2, 0x65, 0xbb,
	0xe6, 0x6c, 0xb2, 0x09, 0x15, 0xfe, 0x47, 0x8a, 0x82, 0xae, 0x99, 0x05, 0x6b, 0x90, 0xfb, 0x50,
	0x33, 0x1f, 0x7d, 0x1c, 0xb3, 0x38, 0xa1, 0x55, 0xb3, 0x06, 0xc6, 0xb5, 0xa7, 0x3d, 0xe4, 0x01,
	0x34, 0x64, 0x36, 0x1c, 0xa2, 0x94, 0xfd, 0x21, 0xcf, 0x52, 0x45, 0xfd, 0x96, 0xd7, 0xa9, 0x84,
	0xf5, 0xdc, 0xf9, 0x5a, 0xfb, 0x74, 0x14, 0x14, 0x82, 0x8b, 0x1c, 0x02, 0x06, 0x02, 0xc6, 0x65,
	0x01, 0x01, 0x54, 0xa3, 0x58, 0xb2, 0x41, 0x82, 0x11, 0xad, 0xb5, 0xbc, 0x4e, 0x35, 0x2c, 0x6c,
	0xd2, 0x81, 0x15, 0xc5, 0x46, 0x92, 0xd6, 0x5b, 0xcb, 0x9d, 0xda, 0xf6, 0x66, 0xd7, 0x34, 0xb0,
	0x7b, 0xc0, 0x07, 0xdd, 0x23, 0x36, 0x92, 0x7b, 0xa9, 0x12, 0xd3, 0xd0, 0x20, 0x08, 0x85, 0x35,
	0x81, 0x4a, 0xc4, 0x28, 0x69, 0xa3, 0xe5, 0x75, 0x1a, 0xa1, 0x33, 0xc9, 0x27, 0xd0, 0x8c, 0x70,
	0x82, 0x69, 0x84, 0xa9, 0xea, 0xbf, 0xe5, 0x03, 0x49, 0x9b, 0xad, 0xe5, 0x8e, 0x1f, 0x36, 0x0a,
	0xef, 0x01, 0x1f, 0x48, 0xf2, 0x3f, 0x80, 0x09, 0x13, 0x39, 0x86, 0xde, 0x30, 0xc5, 0xfa, 0xd6,
	0xa3, 0xdb, 0xdd, 0x82, 0xda, 0x90, 0xa7, 0xc3, 0x4c, 0x08, 0x4c, 0x87, 0x53, 0xba, 0x6e, 0xd6,
	0xcb, 0x2e, 0x5d, 0x07, 0xbe, 0xc7, 0x61, 0xa6, 0xb8, 0xa0, 0x37, 0x6d, 0x83, 0x9d, 0x4d, 0xf6,
	0xe1, 0x86, 0xfb, 0xee, 0x0f, 0x79, 0x7a, 0x1c, 0x8f, 0x28, 0x31, 0x25, 0xfd, 0xbf, 0x54, 0xd2,
	0x5e, 0x8e, 0x78, 0x6d, 0x00, 0xb6, 0xb8, 0x26, 0xce, 0x38, 0xc9, 0x6d, 0x58, 0x95, 0x8a, 0xa9,
	0x4c, 0xd2, 0x0d, 0x73, 0x44, 0x6e, 0x91, 0xaf, 0xa0, 0x3a, 0x46, 0xc5, 0x22, 0xa6, 0x18, 0xdd,
	0x34, 0x91, 0x69, 0x29, 0xf2, 0x4f, 0xf9, 0x92, 0x8d, 0x59, 0x20, 0xc9, 0x73, 0xa8, 0x27, 0x4c,
	0xaa, 0x7e, 0x7e, 0x61, 0xf4, 0x6e, 0xcb, 0xeb, 0xd4, 0xb6, 0xef, 0x94, 0x76, 0xbe, 0xc9, 0x92,
	0x44, 0x5f, 0xc5, 0x51, 0x3c, 0xc6, 0xb0, 0xa6, 0xc1, 0x3d, 0x8b, 0x25, 0x5f, 0x03, 0x98, 0xbd,
	0xe6, 0x26, 0x69, 0x70, 0xf9, 0x4e, 0x5f, 0x43, 0xf7, 0x34, 0x92, 0x74, 0x61, 0x25, 0xc5, 0xf7,
	0x8a, 0xde, 0x31, 0x3b, 0x82, 0xae, 0xe5, 0x7a, 0xd7, 0x71, 0xbd, 0x7b, 0xe4, 0xc4, 0x10, 0x1a,
	0x9c, 0x6e, 0x7c, 0x14, 0xcb, 0x49, 0xc2, 0xa6, 0x86, 0xee, 0xd4, 0x36, 0xbe, 0xe4, 0x22, 0xcf,
	0x01, 0x26, 0x82, 0xeb, 0xa4, 0xb8, 0x90, 0x74, 0xcb, 0x54, 0x1f, 0x94, 0x32, 0x39, 0x2c, 0x16,
	0x6d, 0xfd, 0x25, 0x74, 0xf0, 0x14, 0xfc, 0x82, 0x49, 0x64, 0x1d, 0x96, 0xdf, 0xe1, 0x34, 0x57,
	0x94, 0xfe, 0xd4, 0xc2, 0x38, 0x65, 0x49, 0xe6, 0xd4, 0x64, 0x8d, 0xe7, 0x4b, 0xdf, 0x78, 0xc1,
	0x0e, 0x6c, 0x2c, 0xb8, 0xaf, 0x6b, 0x85, 0x78, 0x01, 0x8d, 0x99, 0x8b, 0xb9, 0xd6, 0xe6, 0xdf,
	0xa0, 0x5e, 0xee, 0x30, 0xd9, 0x02, 0xff, 0x84, 0xc9, 0xbe, 0x45, 0x7b, 0x56, 0x46, 0x27, 0x4c,
	0xfe, 0xaa, 0x6d, 0xdd, 0x73, 0x3d, 0x07, 0x4c, 0x94, 0x0f, 0xf4, 0x5c, 0xe3, 0x82, 0x10, 0x6e,
	0xcc, 0x35, 0x6d, 0x41, 0x6e, 0x9f, 0x96, 0x73, 0xab, 0x6d, 0x6f, 0xe4, 0x1d, 0x3f, 0x4c, 0xb2,
	0x51, 0x9c, 0xda, 0x9e, 0x94, 0x12, 0x6e, 0xff, 0xe5, 0x41, 0xbd, 0xbc, 0x46, 0x9e, 0xc2, 0x6a,
	0x2e, 0x05, 0xcf, 0x5c, 0xd9, 0xfd, 0x05, 0x01, 0xba, 0x65, 0x2d, 0xe4, 0xf0, 0xe0, 0x19, 0xd4,
	0x3e, 0xb2, 0xe5, 0xed, 0x47, 0xd0, 0xe8, 0xa1, 0xd6, 0x73, 0x88, 0xbf, 0x67, 0x28, 0x15, 0xb9,
	0x07, 0xcb, 0x5a, 0xee, 0x9e, 0x29, 0x01, 0xce, 0x48, 0x13, 0x6a, 0x77, 0xbb, 0x0b, 0x4d, 0x07,
	0x97, 0x13, 0x9e, 0x4a, 0xfc, 0x00, 0xfe, 0x11, 0xac, 0xef, 0x62, 0x82, 0x0a, 0x4b, 0x27, 0xdc,
	0x85, 0xea, 0x5b, 0x3e, 0xe8, 0x97, 0x66, 0xf5, 0xda, 0x5b, 0x3e, 0x78, 0xc3, 0xc6, 0xd8, 0xfe,
	0x02, 0x6e, 0x96, 0xe0, 0x57, 0x3a, 0xe1, 0x33, 0x68, 0xec, 0xcf, 0x14, 0x70, 0x49, 0xf8, 0x2e,
	0x34, 0xf7, 0xaf, 0x93, 0xfd, 0xdf, 0x4b, 0xe0, 0x5b, 0x4e, 0xc7, 0x3c, 0xbd, 0x24, 0xb0, 0x9e,
	0xb5, 0x6e, 0x62, 0x2c, 0x19, 0xa6, 0x39, 0x53, 0x8f, 0x27, 0x9e, 0xa9, 0x49, 0xa6, 0xcc, 0x2f,
	0xa6, 0x1e, 0xe6, 0x96, 0x66, 0x67, 0xca, 0x23, 0xb4, 0xd1, 0x56, 0xec, 0x70, 0xd4, 0x0e, 0x13,
	0x6e, 0x13, 0x2a, 0x23, 0xc1, 0xb3, 0x09, 0xad, 0xb4, 0xbc, 0xce, 0x72, 0x68, 0x0d, 0x7d, 0x08,
	0x53, 0x4a, 0xff, 0xf9, 0xe8, 0xaa, 0x1d, 0xe8, 0xb9, 0x49, 0x9e, 0x01, 0x48, 0xc5, 0x84, 0xc2,
	0xa8, 0xcf, 0x94, 0xf9, 0x65, 0x5d, 0xce, 0x69, 0x3f, 0x47, 0xef, 0x28, 0xf2, 0x02, 0x6a, 0xc7,
	0x71, 0x1a, 0xcb, 0x13, 0xbb, 0xb7, 0xfa, 0xc1, 0xbd, 0xe0, 0xe0, 0x3b, 0xaa, 0xfd, 0x3d, 0x6c,
	0x16, 0xed, 0xd9, 0xe5, 0x29, 0xba, 0x2b, 0xe8, 0x82, 0x8f, 0xce, 0x9f, 0xf7, 0x76, 0x3d, 0xef,
	0x6d, 0x81, 0x0f, 0xcf, 0x20, 0xed, 0x3d, 0xb8, 0x35, 0x17, 0x27, 0xbf, 0x1e, 0x02, 0x2b, 0xc7,
	0x82, 0x8f, 0xdd, 0x2f, 0x5d, 0x7f, 0xeb, 0x36, 0x4c, 0xd8, 0x34, 0xe1, 0x2c, 0x32, 0xbd, 0xae,
	0x87, 0xce, 0xd4, 0x54, 0x08, 0xb3, 0xf4, 0xca, 0x54, 0x70, 0xd8, 0xab, 0x12, 0xf9, 0x88, 0x8f,
	0x46, 0xc9, 0xd5, 0x89, 0x5c, 0x82, 0x5f, 0x8d, 0x6c, 0x1e, 0x40, 0xc8, 0x8e, 0x55, 0x0f, 0xc5,
	0x29, 0x0a, 0xd2, 0x84, 0xa5, 0x38, 0xca, 0xc3, 0x2e, 0xc5, 0x91, 0x79, 0xdd, 0xf0, 0xc8, 0x29,
	0xd8, 0x7c, 0x1b, 0x46, 0x44, 0x91, 0xd0, 0xb4, 0xb3, 0x0f, 0x18, 0x67, 0x6a, 0xda, 0x25, 0xc8,
	0x22, 0x14, 0x86, 0x5b, 0xd5, 0x30, 0xb7, 0xcc, 0x20, 0xe0, 0x0a, 0x85, 0x61, 0x56, 0x35, 0xb4,
	0x86, 0x7e, 0xb6, 0x08, 0x76, 0xac, 0xfa, 0xe6, 0xba, 0x87, 0x3c, 0x31, 0xfc, 0xf2, 0xc3, 0xba,
	0x76, 0x1e, 0xe6, 0xbe, 0x36, 0x83, 0x7b, 0x3a, 0xbd, 0x7d, 0x54, 0x76, 0xd6, 0x64, 0x82, 0x99,
	0x7b, 0x74, 0xd5, 0x3d, 0x84, 0x35, 0x69, 0x52, 0x97, 0xf9, 0xf8, 0xba, 0x99, 0x57, 0x78, 0x56,
	0x54, 0xe8, 0x10, 0x3a, 0x8f, 0x38, 0x8d, 0xf0, 0xbd, 0x29, 0x67, 0x25, 0xb4, 0x46, 0xfb, 0x21,
	0xdc, 0xd5, 0xe0, 0x10, 0xc7, 0xfc, 0x14, 0x0f, 0x11, 0xc5, 0x77, 0xd3, 0x1f, 0x76, 0x5d, 0xb7,
	0xe7, 0x1a, 0xd2, 0x7e, 0x05, 0xcd, 0x9d, 0x11, 0xa6, 0x2a, 0xcc, 0xd2, 0x9e, 0x12, 0xc8, 0xc6,
	0xd7, 0xa6, 0xdd, 0x2b, 0x58, 0x77, 0x11, 0x3e, 0x92, 0x71, 0x3f, 0xc3, 0xd6, 0x3e, 0xaa, 0x9d,
	0xa1, 0x8a, 0x4f, 0xb1, 0x38, 0x42, 0x16, 0xc1, 0x3e, 0x07, 0x28, 0x4e, 0x73, 0x5d, 0x39, 0x9f,
	0x51, 0x09, 0xb3, 0xfd, 0x6f, 0x05, 0x2a, 0xbb, 0xfa, 0x81, 0x4c, 0x9e, 0xc0, 0xaa, 0x9d, 0x55,
	0xc4, 0x3d, 0xf2, 0x66, 0xc6, 0x5c, 0x70, 0x6b, 0xce, 0x9b, 0x1f, 0x79, 0x00, 0x8d, 0x19, 0x29,
	0x91, 0xad, 0xf9, 0xf3, 0x4a, 0x42, 0x0d, 0xee, 0x2d, 0x5e, 0xcc, 0x63, 0x3d, 0x85, 0xca, 0x8f,
	0xc8, 0x4e, 0x91, 0xdc, 0x3e, 0x37, 0x0f, 0xf6, 0xf4, 0xfb, 0x3b, 0xb8, 0xc0, 0xaf, 0x73, 0xef,
	0xcd, 0xe6, 0xde, 0x5b, 0x98, 0xfb, 0xdc, 0xaf, 0xe4, 0x25, 0xf8, 0xc5, 0xf4, 0x27, 0xee, 0xe5,
	0x34, 0xff, 0xfb, 0x08, 0xe8, 0xf9, 0x85, 0x7c, 0xff, 0x13, 0x58, 0xb5, 0x9a, 0x2e, 0x8e, 0x9d,
	0x19, 0x07, 0xc5, 0xb1, 0x73, 0xc2, 0x7f, 0x09, 0x7e, 0xa1, 0xd5, 0xe2, 0xd8, 0x79, 0xb1, 0x17,
	0xc7, 0x9e, 0x97, 0x75, 0x0f, 0x36, 0x17, 0x09, 0xe3, 0xc2, 0xae, 0x3d, 0x28, 0xe9, 0xe2, 0x42,
	0x35, 0xbd, 0x01, 0x72, 0x5e, 0x0a, 0xa4, 0x55, 0xda, 0xba, 0x50, 0x25, 0x17, 0x5e, 0xc9, 0xb7,
	0x50, 0x75, 0x5c, 0x27, 0xae, 0x0f, 0xb3, 0xf2, 0x09, 0xee, 0xcc, 0xb9, 0x5d, 0x2e, 0x1d, 0x8f,
	0xfc, 0x02, 0x1b, 0x0b, 0x78, 0x7e, 0x61, 0x85, 0xed, 0x33, 0x6e, 0x5e, 0xa4, 0x8d, 0xc1, 0xaa,
	0xd9, 0xf3, 0xe5, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x1e, 0xe1, 0xf8, 0x10, 0x0e, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DkronClient is the client API for Dkron service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DkronClient interface {
	GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*GetJobResponse, error)
	ExecutionDone(ctx context.Context, in *ExecutionDoneRequest, opts ...grpc.CallOption) (*ExecutionDoneResponse, error)
	Leave(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error)
	SetJob(ctx context.Context, in *SetJobRequest, opts ...grpc.CallOption) (*SetJobResponse, error)
	DeleteJob(ctx context.Context, in *DeleteJobRequest, opts ...grpc.CallOption) (*DeleteJobResponse, error)
	RunJob(ctx context.Context, in *RunJobRequest, opts ...grpc.CallOption) (*RunJobResponse, error)
	ToggleJob(ctx context.Context, in *ToggleJobRequest, opts ...grpc.CallOption) (*ToggleJobResponse, error)
	RaftGetConfiguration(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RaftGetConfigurationResponse, error)
	RaftRemovePeerByID(ctx context.Context, in *RaftRemovePeerByIDRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	AgentRun(ctx context.Context, opts ...grpc.CallOption) (Dkron_AgentRunClient, error)
	GetActiveExecutions(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetActiveExecutionsResponse, error)
}

type dkronClient struct {
	cc *grpc.ClientConn
}

func NewDkronClient(cc *grpc.ClientConn) DkronClient {
	return &dkronClient{cc}
}

func (c *dkronClient) GetJob(ctx context.Context, in *GetJobRequest, opts ...grpc.CallOption) (*GetJobResponse, error) {
	out := new(GetJobResponse)
	err := c.cc.Invoke(ctx, "/types.Dkron/GetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dkronClient) ExecutionDone(ctx context.Context, in *ExecutionDoneRequest, opts ...grpc.CallOption) (*ExecutionDoneResponse, error) {
	out := new(ExecutionDoneResponse)
	err := c.cc.Invoke(ctx, "/types.Dkron/ExecutionDone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dkronClient) Leave(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/types.Dkron/Leave", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dkronClient) SetJob(ctx context.Context, in *SetJobRequest, opts ...grpc.CallOption) (*SetJobResponse, error) {
	out := new(SetJobResponse)
	err := c.cc.Invoke(ctx, "/types.Dkron/SetJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dkronClient) DeleteJob(ctx context.Context, in *DeleteJobRequest, opts ...grpc.CallOption) (*DeleteJobResponse, error) {
	out := new(DeleteJobResponse)
	err := c.cc.Invoke(ctx, "/types.Dkron/DeleteJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dkronClient) RunJob(ctx context.Context, in *RunJobRequest, opts ...grpc.CallOption) (*RunJobResponse, error) {
	out := new(RunJobResponse)
	err := c.cc.Invoke(ctx, "/types.Dkron/RunJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dkronClient) ToggleJob(ctx context.Context, in *ToggleJobRequest, opts ...grpc.CallOption) (*ToggleJobResponse, error) {
	out := new(ToggleJobResponse)
	err := c.cc.Invoke(ctx, "/types.Dkron/ToggleJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dkronClient) RaftGetConfiguration(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RaftGetConfigurationResponse, error) {
	out := new(RaftGetConfigurationResponse)
	err := c.cc.Invoke(ctx, "/types.Dkron/RaftGetConfiguration", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dkronClient) RaftRemovePeerByID(ctx context.Context, in *RaftRemovePeerByIDRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/types.Dkron/RaftRemovePeerByID", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dkronClient) AgentRun(ctx context.Context, opts ...grpc.CallOption) (Dkron_AgentRunClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Dkron_serviceDesc.Streams[0], "/types.Dkron/AgentRun", opts...)
	if err != nil {
		return nil, err
	}
	x := &dkronAgentRunClient{stream}
	return x, nil
}

type Dkron_AgentRunClient interface {
	Send(*AgentRunStream) error
	CloseAndRecv() (*AgentRunResponse, error)
	grpc.ClientStream
}

type dkronAgentRunClient struct {
	grpc.ClientStream
}

func (x *dkronAgentRunClient) Send(m *AgentRunStream) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dkronAgentRunClient) CloseAndRecv() (*AgentRunResponse, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(AgentRunResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dkronClient) GetActiveExecutions(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*GetActiveExecutionsResponse, error) {
	out := new(GetActiveExecutionsResponse)
	err := c.cc.Invoke(ctx, "/types.Dkron/GetActiveExecutions", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DkronServer is the server API for Dkron service.
type DkronServer interface {
	GetJob(context.Context, *GetJobRequest) (*GetJobResponse, error)
	ExecutionDone(context.Context, *ExecutionDoneRequest) (*ExecutionDoneResponse, error)
	Leave(context.Context, *empty.Empty) (*empty.Empty, error)
	SetJob(context.Context, *SetJobRequest) (*SetJobResponse, error)
	DeleteJob(context.Context, *DeleteJobRequest) (*DeleteJobResponse, error)
	RunJob(context.Context, *RunJobRequest) (*RunJobResponse, error)
	ToggleJob(context.Context, *ToggleJobRequest) (*ToggleJobResponse, error)
	RaftGetConfiguration(context.Context, *empty.Empty) (*RaftGetConfigurationResponse, error)
	RaftRemovePeerByID(context.Context, *RaftRemovePeerByIDRequest) (*empty.Empty, error)
	AgentRun(Dkron_AgentRunServer) error
	GetActiveExecutions(context.Context, *empty.Empty) (*GetActiveExecutionsResponse, error)
}

// UnimplementedDkronServer can be embedded to have forward compatible implementations.
type UnimplementedDkronServer struct {
}

func (*UnimplementedDkronServer) GetJob(ctx context.Context, req *GetJobRequest) (*GetJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetJob not implemented")
}
func (*UnimplementedDkronServer) ExecutionDone(ctx context.Context, req *ExecutionDoneRequest) (*ExecutionDoneResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExecutionDone not implemented")
}
func (*UnimplementedDkronServer) Leave(ctx context.Context, req *empty.Empty) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Leave not implemented")
}
func (*UnimplementedDkronServer) SetJob(ctx context.Context, req *SetJobRequest) (*SetJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetJob not implemented")
}
func (*UnimplementedDkronServer) DeleteJob(ctx context.Context, req *DeleteJobRequest) (*DeleteJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteJob not implemented")
}
func (*UnimplementedDkronServer) RunJob(ctx context.Context, req *RunJobRequest) (*RunJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RunJob not implemented")
}
func (*UnimplementedDkronServer) ToggleJob(ctx context.Context, req *ToggleJobRequest) (*ToggleJobResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ToggleJob not implemented")
}
func (*UnimplementedDkronServer) RaftGetConfiguration(ctx context.Context, req *empty.Empty) (*RaftGetConfigurationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RaftGetConfiguration not implemented")
}
func (*UnimplementedDkronServer) RaftRemovePeerByID(ctx context.Context, req *RaftRemovePeerByIDRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RaftRemovePeerByID not implemented")
}
func (*UnimplementedDkronServer) AgentRun(srv Dkron_AgentRunServer) error {
	return status.Errorf(codes.Unimplemented, "method AgentRun not implemented")
}
func (*UnimplementedDkronServer) GetActiveExecutions(ctx context.Context, req *empty.Empty) (*GetActiveExecutionsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetActiveExecutions not implemented")
}

func RegisterDkronServer(s *grpc.Server, srv DkronServer) {
	s.RegisterService(&_Dkron_serviceDesc, srv)
}

func _Dkron_GetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkronServer).GetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Dkron/GetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkronServer).GetJob(ctx, req.(*GetJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dkron_ExecutionDone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExecutionDoneRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkronServer).ExecutionDone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Dkron/ExecutionDone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkronServer).ExecutionDone(ctx, req.(*ExecutionDoneRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dkron_Leave_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkronServer).Leave(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Dkron/Leave",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkronServer).Leave(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dkron_SetJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkronServer).SetJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Dkron/SetJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkronServer).SetJob(ctx, req.(*SetJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dkron_DeleteJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkronServer).DeleteJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Dkron/DeleteJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkronServer).DeleteJob(ctx, req.(*DeleteJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dkron_RunJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RunJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkronServer).RunJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Dkron/RunJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkronServer).RunJob(ctx, req.(*RunJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dkron_ToggleJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ToggleJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkronServer).ToggleJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Dkron/ToggleJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkronServer).ToggleJob(ctx, req.(*ToggleJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dkron_RaftGetConfiguration_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkronServer).RaftGetConfiguration(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Dkron/RaftGetConfiguration",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkronServer).RaftGetConfiguration(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dkron_RaftRemovePeerByID_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RaftRemovePeerByIDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkronServer).RaftRemovePeerByID(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Dkron/RaftRemovePeerByID",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkronServer).RaftRemovePeerByID(ctx, req.(*RaftRemovePeerByIDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Dkron_AgentRun_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DkronServer).AgentRun(&dkronAgentRunServer{stream})
}

type Dkron_AgentRunServer interface {
	SendAndClose(*AgentRunResponse) error
	Recv() (*AgentRunStream, error)
	grpc.ServerStream
}

type dkronAgentRunServer struct {
	grpc.ServerStream
}

func (x *dkronAgentRunServer) SendAndClose(m *AgentRunResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dkronAgentRunServer) Recv() (*AgentRunStream, error) {
	m := new(AgentRunStream)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Dkron_GetActiveExecutions_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DkronServer).GetActiveExecutions(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/types.Dkron/GetActiveExecutions",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DkronServer).GetActiveExecutions(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _Dkron_serviceDesc = grpc.ServiceDesc{
	ServiceName: "types.Dkron",
	HandlerType: (*DkronServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetJob",
			Handler:    _Dkron_GetJob_Handler,
		},
		{
			MethodName: "ExecutionDone",
			Handler:    _Dkron_ExecutionDone_Handler,
		},
		{
			MethodName: "Leave",
			Handler:    _Dkron_Leave_Handler,
		},
		{
			MethodName: "SetJob",
			Handler:    _Dkron_SetJob_Handler,
		},
		{
			MethodName: "DeleteJob",
			Handler:    _Dkron_DeleteJob_Handler,
		},
		{
			MethodName: "RunJob",
			Handler:    _Dkron_RunJob_Handler,
		},
		{
			MethodName: "ToggleJob",
			Handler:    _Dkron_ToggleJob_Handler,
		},
		{
			MethodName: "RaftGetConfiguration",
			Handler:    _Dkron_RaftGetConfiguration_Handler,
		},
		{
			MethodName: "RaftRemovePeerByID",
			Handler:    _Dkron_RaftRemovePeerByID_Handler,
		},
		{
			MethodName: "GetActiveExecutions",
			Handler:    _Dkron_GetActiveExecutions_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "AgentRun",
			Handler:       _Dkron_AgentRun_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "dkron.proto",
}
